#version 450 core

#include "common.h"

//layout (rgba16f, binding = 16) uniform readonly image2D hdrTex;
layout (binding = 16) uniform sampler2D hdrTex;
layout (rgba8, binding = 17) uniform writeonly image2D storeTex;


layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
void main()
{
    uint indexInThreadGroup = 8 * gl_LocalInvocationID.y + gl_LocalInvocationID.x;
    uint groupThreadIndex = gl_WorkGroupID.y * 8 + gl_WorkGroupID.x;

    ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
    if(pos.x < windowSize.x && pos.y < windowSize.y)
    {
        //vec4 hdrSample = imageLoad(hdrTex, pos);
        vec4 hdrSample = texelFetch(hdrTex, pos, 0);
        // reinhard tonemapping
        float luminance = dot(hdrSample.xyz, vec3(0.2126, 0.7152, 0.0722));
        hdrSample = hdrSample / (luminance + 1.0f);
        imageStore(storeTex, pos, vec4(hdrSample.rgb, 0.0f));
    }
}

