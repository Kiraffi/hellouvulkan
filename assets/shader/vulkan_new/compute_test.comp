#version 450 core

#define MATRIX_ORDER row_major
//#define MATRIX_ORDER column_major

layout (binding = 0, MATRIX_ORDER) uniform ConstantDataStructBlock
{
    mat4 cameraMatrix;
    mat4 viewProjMat;
    mat4 mvp;
    mat4 matrix_padding;

    vec2 windowSize;
    float padding[12];

};

//layout (binding = 1) uniform sampler2D textureToSample;
layout (rgba8, binding = 1) uniform readonly image2D loadTex; // when color format was bgra, didnt work on intel
layout (rgba8, binding = 2) uniform writeonly image2D storeTex;

layout (local_size_x = 8, local_size_y = 8, local_size_z = 1) in;
void main()
{
    uint indexInThreadGroup = 8 * gl_LocalInvocationID.y + gl_LocalInvocationID.x;
    uint groupThreadIndex = gl_WorkGroupID.y * 8 + gl_WorkGroupID.x;


    ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
    if(pos.x < windowSize.x && pos.y < windowSize.y)
    {
        //vec2 samplePos = (vec2(pos.xy) + 0.5f) / vec2(windowSize.xy);
        //vec4 imageSample = textureLod(textureToSample, samplePos, 0);
        //vec4 imageSample = texture(textureToSample, samplePos);
        //vec4 imageSample = texelFetch(textureToSample, pos.xy, 0);

        // changed bgra to rgbaunorm8 image, and this works.
        vec4 imageSample = imageLoad(loadTex, pos);
        imageStore(storeTex, pos, imageSample);
    }
}

